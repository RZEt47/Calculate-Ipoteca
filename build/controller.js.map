{"version":3,"sources":["model.js","utils/formatters.js","view/updateResultsView.js","utils/updateModel.js","view/costInput.js","view/radioPrograms.js","view/costRange.js","view/utils.js","view/paymentInput.js","view/paymentRange.js","view/timeInput.js","view/timeRange.js","controller.js"],"names":["data","selectedProgram","cost","minPrice","maxPrice","minPayPercents","maxPayPercents","paymentPercents","payment","getMinPayment","getMaxPayment","minYear","maxYear","time","programs","base","it","gov","zero","results","rate","getData","_objectSpread","getResults","setData","newData","onUpdate","id","months","totalAmount","monthRate","generalRate","Math","pow","monthPayment","overPayment","priceFormatter","exports","Intl","NumberFormat","style","currency","maximumFractionDigits","priceFormatterDecimals","_formatters","require","updateResultsView","document","querySelector","innerHTML","format","_default","default","updateModel","element","dispatchEvent","CustomEvent","bubbles","detail","_updateModel","_interopRequireDefault","obj","__esModule","init","input","cleaveInput","Cleave","numeral","numeralThousandsGroupStyle","delimiter","setRawValue","addEventListener","value","getRawValue","closest","classList","add","remove","_getData$programs","innerText","concat","querySelectorAll","forEach","radioBtn","parseFloat","slider","noUiSlider","create","start","connect","tooltips","step","range","min","max","wNumb","decimals","thousand","suffix","on","sliderValue","get","split","parseInt","String","replace","updateMinPercents","Model","_interopRequireWildcard","_updateResultsView","_costInput","_radioPrograms","_costRange","_utils","_paymentInput","_paymentRange","_timeInput","_timeRange","_getRequireWildcardCache","e","WeakMap","r","t","has","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","_regeneratorRuntime","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","window","onload","cleaveCost","costInput","sliderCost","costRange","cleavePayment","paymentInput","sliderPayment","paymentRange","sliderTime","timeRange","cleaveTime","timeInput","updateOptions","updateFormAndSlider","openFormBtn","orderForm","submitFormBtn","preventDefault","formData","FormData","_fetchData","_callee","url","checkOnUrl","response","result","_callee$","_context","_checkOnUrl","urlArrayDot","newUrl","join","newUrlSlash","location","href","fetch","headers","body","JSON","stringify","form","email","phone","text","removeAttribute","getElementById","setAttribute","fetchData"],"mappings":"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","file":"controller.js","sourceRoot":"..\\js","sourcesContent":["\r\nlet data = {\r\n    selectedProgram: 0.1,\r\n    cost: 12000000,\r\n    minPrice: 375000,\r\n    maxPrice: 100000000,\r\n    minPayPercents: 0.15,\r\n    maxPayPercents: 0.9,\r\n    paymentPercents: 0.5,\r\n    payment: 6000000,\r\n    getMinPayment: function () {\r\n      return this.cost * this.minPayPercents\r\n    },\r\n    getMaxPayment: function () {\r\n        return this.cost * this.maxPayPercents\r\n    },\r\n    minYear: 1,\r\n    maxYear: 30,\r\n    time: 10,\r\n    programs: {\r\n        base: 0.1,\r\n        it: 0.047,\r\n        gov: 0.067,\r\n        zero: 0.12\r\n    },\r\n}\r\n\r\nlet results = {\r\n    rate: data.selectedProgram\r\n}\r\n\r\nfunction getData() {\r\n    return {...data}\r\n}\r\n\r\nfunction getResults() {\r\n    return {...results}\r\n}\r\n\r\nfunction setData(newData) {\r\n\r\n    // Filter of percents\r\n    if (newData.onUpdate === 'radioProgram') {\r\n        if (newData.id === 'zero-value') {\r\n            data.minPayPercents = 0\r\n        } else {\r\n            data.minPayPercents = 0.15\r\n        }\r\n    }\r\n\r\n    // Filter of cost\r\n    if (newData.onUpdate === 'inputCost' || newData.onUpdate === 'costSlider') {\r\n        if (newData.cost < data.minPrice) {\r\n            newData.cost = data.minPrice\r\n        }\r\n        else if (newData.cost > data.maxPrice) {\r\n            newData.cost = data.maxPrice\r\n        }\r\n\r\n    // Filter of first payment\r\n        if (data.payment > data.getMaxPayment()) {\r\n            data.payment = data.getMaxPayment()\r\n        } else if (data.payment < data.getMinPayment()) {\r\n            data.payment = data.getMinPayment()\r\n        }\r\n\r\n        data.paymentPercents = (data.payment * 100) / newData.cost / 100\r\n    }\r\n\r\n    // Filter of higher and lower percent\r\n    if (newData.onUpdate === 'inputPayment') {\r\n\r\n        newData.paymentPercents = newData.payment / data.cost\r\n\r\n        // if percents more than 90%\r\n        if (newData.paymentPercents > data.maxPayPercents) {\r\n            newData.paymentPercents = data.maxPayPercents\r\n            newData.payment = data.cost * data.maxPayPercents\r\n        }\r\n\r\n        // if percents less than 90%\r\n        if (newData.paymentPercents < data.minPayPercents) {\r\n            newData.paymentPercents = data.minPayPercents\r\n            newData.payment = data.cost * data.minPayPercents\r\n        }\r\n    }\r\n\r\n    // Filter of rangePayment\r\n    if (newData.onUpdate === 'paymentSlider') {\r\n        newData.paymentPercents = newData.paymentPercents / 100\r\n        data.payment = data.cost * newData.paymentPercents\r\n    }\r\n\r\n    // Filter of time\r\n    if (newData.onUpdate === 'inputTime') {\r\n\r\n        if (newData.time > data.maxYear) {\r\n            newData.time = data.maxYear\r\n        }\r\n\r\n        if (newData.time < data.minYear) {\r\n            newData.time = data.minYear\r\n        }\r\n    }\r\n\r\n    data = {\r\n        ...data,\r\n        ...newData\r\n    }\r\n\r\n    // Calculate results\r\n\r\n    const months = data.time * 12\r\n    const totalAmount = data.cost - data.payment\r\n    const monthRate = data.selectedProgram / 12\r\n    const generalRate = (1 + monthRate) ** months\r\n    const monthPayment = (totalAmount * monthRate * generalRate) / (generalRate - 1)\r\n    const overPayment = monthPayment * months - totalAmount\r\n\r\n    results = {\r\n        rate: data.selectedProgram,\r\n        totalAmount,\r\n        monthPayment,\r\n        overPayment\r\n    }\r\n\r\n}\r\n\r\nexport {getData, setData, getResults}","\r\nconst priceFormatter = new Intl.NumberFormat('ru-RU', {\r\n    style: 'currency',\r\n    currency: 'RUB',\r\n    maximumFractionDigits: 0\r\n})\r\n\r\n// 7 000 000\r\n\r\nconst priceFormatterDecimals = new Intl.NumberFormat('ru-RU', {\r\n    style: 'currency',\r\n    currency: 'RUB',\r\n    maximumFractionDigits: 2\r\n})\r\n\r\n// 7 000 000.45\r\n\r\nexport {priceFormatter, priceFormatterDecimals}","import {priceFormatter, priceFormatterDecimals} from './../utils/formatters.js'\r\nfunction updateResultsView(results) {\r\n    document.querySelector('#total-percent').innerHTML = results.rate * 100 + \"%\"\r\n    document.querySelector('#total-month-payment').innerHTML = priceFormatterDecimals.format(results.monthPayment)\r\n    document.querySelector('#total-cost').innerHTML = priceFormatter.format(results.totalAmount)\r\n    document.querySelector('#total-overpayment').innerHTML = priceFormatterDecimals.format(results.overPayment)\r\n}\r\n\r\nexport default updateResultsView","\r\nfunction updateModel(element, data) {\r\n    element.dispatchEvent(new CustomEvent('updateForm', {\r\n        bubbles: true,\r\n        detail: {...data}\r\n    }))\r\n}\r\n\r\nexport default updateModel","import updateModel from \"./../utils/updateModel.js\"\r\nfunction init(getData) {\r\n\r\n    const input = document.querySelector('#input-cost')\r\n    const settings = {\r\n        numeral: true,\r\n        numeralThousandsGroupStyle: 'thousand',\r\n        delimiter: ' '\r\n    }\r\n\r\n    const data = getData()\r\n\r\n    const cleaveInput = new Cleave(input, settings)\r\n    cleaveInput.setRawValue(data.cost)\r\n\r\n    input.addEventListener('input', function (){\r\n\r\n        const value = +cleaveInput.getRawValue()\r\n\r\n        // Check the min and max value\r\n        if (value < data.minPrice || value > data.maxPrice) {\r\n            input.closest('.param__details').classList.add('param__details--error')\r\n        }\r\n        // Check the acceptable range value\r\n        else if (value >= data.minPrice && value <= data.maxPrice) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n        }\r\n\r\n        // update Model\r\n        updateModel(input, {\r\n            cost: value,\r\n            onUpdate: 'inputCost'\r\n        })\r\n    })\r\n\r\n    input.addEventListener('change', function (){\r\n\r\n        const value = +cleaveInput.getRawValue()\r\n\r\n        if (value > data.maxPrice) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n            cleaveInput.setRawValue(data.maxPrice)\r\n        }\r\n        else if (value < data.minPrice) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n            cleaveInput.setRawValue(data.minPrice)\r\n        }\r\n\r\n        // update Model\r\n        updateModel(input, {\r\n            cost: +cleaveInput.getRawValue(),\r\n            onUpdate: 'inputCost'\r\n        })\r\n    })\r\n\r\n    return cleaveInput\r\n}\r\n\r\nexport default init","import updateModel from \"./../utils/updateModel.js\"\r\nfunction init(getData) {\r\n\r\n    const {base, it, gov, zero} = getData().programs\r\n\r\n    // Insert value in the HTML-markup\r\n    document.querySelector('#base-value').value = base\r\n    document.querySelector('#it-value').value = it\r\n    document.querySelector('#gov-value').value = gov\r\n    document.querySelector('#zero-value').value = zero\r\n\r\n    // Insert value on the page\r\n    document.querySelector('#base-text').innerText = `${base * 100 }%`\r\n    document.querySelector('#it-text').innerText = `${it * 100 }%`\r\n    document.querySelector('#gov-text').innerText = `${gov * 100 }%`\r\n    document.querySelector('#zero-text').innerText = `${zero * 100 }%`\r\n\r\n    // Find the radioButton\r\n    const radioBtn = document.querySelectorAll('input[name = \"program\"]')\r\n\r\n    radioBtn.forEach(function (radioBtn){\r\n        radioBtn.addEventListener('change', function (){\r\n\r\n            updateModel(this, {\r\n                onUpdate: 'radioProgram',\r\n                selectedProgram: parseFloat(this.value),\r\n                id: this.id\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nexport default init","import updateModel from \"./../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n\r\n    const slider = document.querySelector('#slider-cost')\r\n    const data = getData()\r\n\r\n    noUiSlider.create(slider, {\r\n        start: data.cost,\r\n        connect: 'lower',\r\n        tooltips: true,\r\n        step: 100000,\r\n        range: {\r\n            min: data.minPrice,\r\n            '1%': [400000, 100000],\r\n            '50%': [10000000, 500000],\r\n            max: data.maxPrice\r\n        },\r\n        format: wNumb({\r\n            decimals: 0,\r\n            thousand: ' ',\r\n            suffix: ''\r\n        })\r\n    })\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\r\n        let sliderValue = slider.noUiSlider.get()\r\n        sliderValue = sliderValue.split('.')[0]\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''))\r\n\r\n        updateModel(slider, {\r\n            cost: sliderValue,\r\n            onUpdate: 'costSlider'\r\n        })\r\n    })\r\n\r\n    return slider\r\n}\r\n\r\nexport default init","\r\nfunction updateMinPercents(data) {\r\n    document.querySelector('#percents-from').innerText = data.minPayPercents * 100 + '%'\r\n}\r\n\r\nexport {updateMinPercents}","import updateModel from \"./../utils/updateModel.js\"\r\nfunction init(getData) {\r\n\r\n    const input = document.querySelector('#input-downpayment')\r\n\r\n    const settings = {\r\n        numeral: true,\r\n        numeralThousandsGroupStyle: 'thousand',\r\n        delimiter: ' '\r\n    }\r\n\r\n    const cleaveInput = new Cleave(input, settings)\r\n    cleaveInput.setRawValue(getData().payment)\r\n\r\n    input.addEventListener('input', function (){\r\n\r\n        const value = +cleaveInput.getRawValue()\r\n\r\n        // Check the min and max first payment\r\n        if (value < getData().getMinPayment() || value > getData().getMaxPayment()) {\r\n            input.closest('.param__details').classList.add('param__details--error')\r\n        }\r\n        // Check the acceptable range price\r\n        else if (value >= getData().getMinPayment() && value <= getData().getMaxPayment()) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n        }\r\n\r\n        // update Model\r\n        updateModel(input, {\r\n            payment: value,\r\n            onUpdate: 'inputPayment'\r\n        })\r\n    })\r\n\r\n    input.addEventListener('change', function (){\r\n\r\n        const value = +cleaveInput.getRawValue()\r\n\r\n        if (value > getData().getMaxPayment()) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n            cleaveInput.setRawValue(getData().getMaxPayment())\r\n        }\r\n        else if (value < getData().getMinPayment()) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n            cleaveInput.setRawValue(getData().getMinPayment())\r\n        }\r\n\r\n        // update Model\r\n        updateModel(input, {\r\n            payment: value,\r\n            onUpdate: 'inputPayment'\r\n        })\r\n    })\r\n\r\n    return cleaveInput\r\n}\r\n\r\nexport default init","import updateModel from \"./../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n\r\n    const slider = document.querySelector('#slider-downpayment')\r\n\r\n    noUiSlider.create(slider, {\r\n        start: getData().paymentPercents * 100,\r\n        connect: 'lower',\r\n        tooltips: true,\r\n        step: 1,\r\n        range: {\r\n            min: getData().minPayPercents * 100,\r\n            max: getData().maxPayPercents * 100\r\n        },\r\n        format: wNumb({\r\n            decimals: 0,\r\n            thousand: ' ',\r\n            suffix: ''\r\n        })\r\n    })\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\r\n        let sliderValue = slider.noUiSlider.get()\r\n        sliderValue = sliderValue.split('.')[0]\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''))\r\n\r\n        updateModel(slider, {\r\n            paymentPercents: sliderValue,\r\n            onUpdate: 'paymentSlider'\r\n        })\r\n    })\r\n\r\n    return slider\r\n}\r\n\r\nexport default init","import updateModel from \"./../utils/updateModel.js\"\r\nfunction init(getData) {\r\n\r\n    const input = document.querySelector('#input-term')\r\n    const settings = {\r\n        numeral: true,\r\n        numeralThousandsGroupStyle: 'thousand',\r\n        delimiter: ' '\r\n    }\r\n\r\n    const cleaveInput = new Cleave(input, settings)\r\n    cleaveInput.setRawValue(getData().time)\r\n\r\n    input.addEventListener('input', function (){\r\n\r\n        const value = +cleaveInput.getRawValue()\r\n\r\n        // Check the min and max value\r\n        if (value < getData().minYear || value > getData().maxYear) {\r\n            input.closest('.param__details').classList.add('param__details--error')\r\n        }\r\n        // Check the acceptable range value\r\n        else if (value >= getData().minYear && value <= getData().maxYear) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n        }\r\n\r\n        // update Model\r\n        updateModel(input, {\r\n            time: value,\r\n            onUpdate: 'inputTime'\r\n        })\r\n    })\r\n\r\n    input.addEventListener('change', function (){\r\n\r\n        const value = +cleaveInput.getRawValue()\r\n\r\n        if (value > getData().maxYear) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n            cleaveInput.setRawValue(getData().maxYear)\r\n        }\r\n        else if (value < getData().minYear) {\r\n            input.closest('.param__details').classList.remove('param__details--error')\r\n            cleaveInput.setRawValue(getData().minYear)\r\n        }\r\n\r\n        // update Model\r\n        updateModel(input, {\r\n            time: +cleaveInput.getRawValue(),\r\n            onUpdate: 'inputTime'\r\n        })\r\n    })\r\n\r\n    return cleaveInput\r\n}\r\n\r\nexport default init","import updateModel from \"./../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n\r\n    const slider = document.querySelector('#slider-term')\r\n\r\n    noUiSlider.create(slider, {\r\n        start: getData().time,\r\n        connect: 'lower',\r\n        tooltips: true,\r\n        step: 1,\r\n        range: {\r\n            min: getData().minYear,\r\n            max: getData().maxYear\r\n        },\r\n        format: wNumb({\r\n            decimals: 0,\r\n            thousand: ' ',\r\n            suffix: ''\r\n        })\r\n    })\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\r\n        let sliderValue = slider.noUiSlider.get()\r\n        sliderValue = sliderValue.split('.')[0]\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''))\r\n\r\n        updateModel(slider, {\r\n            time: sliderValue,\r\n            onUpdate: 'timeSlider'\r\n        })\r\n    })\r\n\r\n    return slider\r\n}\r\n\r\nexport default init","import * as Model from \"./model.js\"\r\n\r\nimport updateResultsView from \"./view/updateResultsView.js\"\r\nimport costInput from \"./view/costInput.js\"\r\nimport programs from \"./view/radioPrograms.js\"\r\nimport costRange from \"./view/costRange.js\"\r\nimport {updateMinPercents} from \"./view/utils.js\"\r\nimport paymentInput from \"./view/paymentInput.js\"\r\nimport paymentRange from \"./view/paymentRange.js\"\r\nimport timeInput from \"./view/timeInput.js\"\r\nimport timeRange from \"./view/timeRange.js\"\r\n\r\n\r\nwindow.onload = function () {\r\n\r\n    const getData = Model.getData\r\n\r\n    // Init program\r\n\r\n    programs(getData)\r\n\r\n    const cleaveCost = costInput(getData)\r\n\r\n    const sliderCost = costRange(getData)\r\n\r\n    // init paymentInput and sliderPayment\r\n    const cleavePayment = paymentInput(getData)\r\n    const sliderPayment = paymentRange(getData)\r\n\r\n    // init timeInput and sliderTime\r\n    const sliderTime = timeRange(getData)\r\n    const cleaveTime = timeInput(getData)\r\n\r\n    Model.setData({})\r\n    const results = Model.getResults()\r\n    updateResultsView(results)\r\n\r\n\r\n    document.addEventListener('updateForm', function (e){\r\n\r\n        Model.setData(e.detail)\r\n\r\n        const data = Model.getData()\r\n        const results = Model.getResults()\r\n\r\n        // Update all form view based on Model\r\n        updateFormAndSlider(data)\r\n\r\n        //Update results block\r\n        updateResultsView(results)\r\n    })\r\n\r\n    function updateFormAndSlider(data) {\r\n\r\n        // update percents in input\r\n\r\n        if (data.onUpdate === 'radioProgram') {\r\n            updateMinPercents(data)\r\n\r\n            // update payment slider\r\n            sliderPayment.noUiSlider.updateOptions({\r\n                range: {\r\n                    min: data.minPayPercents * 100,\r\n                    max: data.maxPayPercents * 100\r\n                }\r\n            })\r\n        }\r\n\r\n        // costInput\r\n        if (data.onUpdate !== 'inputCost')  {\r\n            cleaveCost.setRawValue(data.cost)\r\n        }\r\n\r\n        // costSlider\r\n        if (data.onUpdate !== 'costSlider')  {\r\n            sliderCost.noUiSlider.set(data.cost)\r\n        }\r\n\r\n        // paymentInput\r\n        if (data.onUpdate !== 'inputPayment') {\r\n            cleavePayment.setRawValue(data.payment)\r\n        }\r\n\r\n        // paymentSlider\r\n        if (data.onUpdate !== 'paymentSlider')  {\r\n            sliderPayment.noUiSlider.set(data.paymentPercents * 100)\r\n        }\r\n\r\n        // timeInput\r\n        if (data.onUpdate !== 'inputTime') {\r\n            cleaveTime.setRawValue(data.time)\r\n        }\r\n\r\n        // timeSlider\r\n        if (data.onUpdate !== 'timeSlider') {\r\n            sliderTime.noUiSlider.set(data.time)\r\n        }\r\n    }\r\n\r\n    // Order Form\r\n    const openFormBtn = document.querySelector('#openFormBtn')\r\n    const orderForm = document.querySelector('#orderForm')\r\n    const submitFormBtn = document.querySelector('#submitFormBtn')\r\n\r\n    openFormBtn.addEventListener('click', function () {\r\n        orderForm.classList.remove('none')\r\n        openFormBtn.classList.add('none')\r\n    })\r\n\r\n    orderForm.addEventListener('submit', function (e) {\r\n        e.preventDefault()\r\n\r\n        // Get data from form\r\n        const formData = new FormData(orderForm)\r\n\r\n        // Disable input and buttons\r\n        submitFormBtn.setAttribute('disabled', true)\r\n        submitFormBtn.innerText = 'Заявка отправляется...'\r\n\r\n        orderForm.querySelectorAll('input').forEach(function (input) {\r\n            input.setAttribute('disabled', true)\r\n        })\r\n\r\n        fetchData()\r\n        async function fetchData() {\r\n            const data = Model.getData()\r\n            const results = Model.getResults()\r\n\r\n            let url = checkOnUrl(document.location.href)\r\n            function checkOnUrl(url) {\r\n\r\n                let urlArrayDot = url.split('.')\r\n\r\n                // If last element of array\r\n                if (urlArrayDot[urlArrayDot.length - 1]) {\r\n\r\n                    urlArrayDot.pop()\r\n\r\n                    let newUrl = urlArrayDot.join('/')\r\n\r\n                    let newUrlSlash = newUrl.split('/')\r\n\r\n                    if (newUrlSlash[newUrlSlash.length - 1] === 'index') {\r\n                        newUrlSlash.pop()\r\n                    }\r\n\r\n                    newUrl = newUrlSlash.join('/') + '/'\r\n\r\n                    return newUrl\r\n\r\n                    // Для VS Code ссылка серверная другая:\r\n\r\n                    // let urlArrayDot = url.split('.')\r\n                    // console.log(urlArrayDot)\r\n                    //\r\n                    // if (urlArrayDot[urlArrayDot.length - 1] === 'html') {\r\n                    //\r\n                    //     urlArrayDot.pop()\r\n                    //\r\n                    //     let newUrl = urlArrayDot.join('.')\r\n                    //     console.log(newUrl)\r\n                    //\r\n                    //     let urlArraySlash = newUrl.split('/')\r\n                    //     console.log(urlArraySlash)\r\n                    //\r\n                    //     urlArraySlash.pop()\r\n                    //\r\n                    //     newUrl = urlArraySlash.join('/') + '/'\r\n                    //     console.log(newUrl)\r\n                    //     return newUrl\r\n                }\r\n\r\n                return url\r\n            }\r\n\r\n            const response = await fetch(url + 'mail.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify({\r\n                    form: {\r\n                        name: formData.get('name'),\r\n                        email: formData.get('email'),\r\n                        phone: formData.get('phone'),\r\n                    },\r\n                    data,\r\n                    results\r\n                })\r\n\r\n            })\r\n\r\n            const result = await response.text()\r\n\r\n            submitFormBtn.removeAttribute('disabled', true)\r\n            submitFormBtn.innerText = 'Оформить заявку'\r\n\r\n            orderForm.querySelectorAll('input').forEach(function (input) {\r\n                input.removeAttribute('disabled', true)\r\n            })\r\n\r\n            orderForm.reset()\r\n            orderForm.classList.add('none')\r\n\r\n            if (result === 'SUCCESS') {\r\n                document.getElementById('success').classList.remove('none')\r\n            } else {\r\n                document.getElementById('error').classList.remove('none')\r\n            }\r\n        }\r\n    })\r\n\r\n}"]}